/*
 * Copyright 2017 Stefan Neuhaus
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:12.1.0'
        classpath 'com.mysql:mysql-connector-j:8.4.0'
    }
}

apply plugin: 'org.owasp.dependencycheck'

dependencyCheck {
    data {
        connectionString = "jdbc:mysql://localhost:3306/dependencycheck?useSSL=false&allowPublicKeyRetrieval=true"
        driver = "com.mysql.cj.jdbc.Driver"
        username = "dc-update"
        password = "<DC_UPDATE_PASSWORD>"
    }
    nvd {
        validForHours = 0
        apiKey = System.getenv("NVD_API_KEY") ?: ""
    }
}


task preUpdate {
    description = 'Performs all tasks that need to run before dependencyCheckUpdate.'
    group = 'DependencyCheck Database (Hooks)'
}
dependencyCheckUpdate.mustRunAfter preUpdate

task postUpdateSuccess {
    description = 'Performs all tasks that need to run after a successful update.'
    group = 'DependencyCheck Database (Hooks)'
    mustRunAfter dependencyCheckUpdate
}


task update {
    description = 'Performs an update of the project.'
    group = 'DependencyCheck Database'
    dependsOn([preUpdate, dependencyCheckUpdate, postUpdateSuccess])
}


task lastUpdateAttempt {
    doLast {
        def timeStamp = new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').format(new Date())
        logger.quiet(timeStamp)
        file("last-update-attempt.txt") << timeStamp << System.getProperty('line.separator')
    }
}
preUpdate.dependsOn lastUpdateAttempt
